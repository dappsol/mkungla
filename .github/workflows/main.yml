name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "main"
  cancel-in-progress: false

jobs:
  check-signatures:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Import GPG key
        run: |
          gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 5752D8551F78CEE4542F5693F2AFEDFD305C790F

      - name: Check signatures
        run: |
          find . -name '*.asc' | while read -r file; do
            gpg --verify "$file" "${file%.asc}"
          done
  
  page-build:
    needs: check-signatures
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: build
        run: |
          mkdir -p dist/assets
          cp -R ./assets/* dist/assets
          cp -R ./src/* dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './dist'

  page-deploy:
    needs: page-build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2